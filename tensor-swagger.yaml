swagger: "2.0"
info:
  version: "1.0"
  title: "Tensor Social API"
  x-logo:
    url: "http://tensorsocial.com/src/images/TensorLogo.svg"
    backgroundColor: #FFFFFF
    altText: Tensor Social logo
  description: |
    # Introduction
    The Tensor Social API provides access to the audience demographic and psychographic attributes of Instagram users based on their active audience and social media presence. We currently support user lookups by user ID or username for Instagram.

    # Authentication
    Authentication is handled via API tokens that you need to send as a query parameter when making any request to our API.

    # Rate Limit
    We are limiting one IP to 10 requests per seconds. If you are sending more requests you will receieve a 429 response status code.

host: api.tensorsocial.com
basePath: /
schemes:
  - "http"
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Dictionaries
    description: We use various objects to look for Influencers or show metrics in Audience Data. For objects like brands, country and city, languages we have a set of helper dictionaries. These dictionaries do not require API token, requesting them is totally free.
  - name: Account
    description: You can check how much credits are left using the account/info endpoint.
  - name: Reports
    description: Creates new audience data report both for likers and followers at the same time. We recommend to use user's Instagram id rather than username wherever possible, as Influencers often change their usernames. User IDs are constant for a given user, and so storing and making lookups by the Instagram user ID will help avoid unexpected behaviour.
  - name: Identification
    description: Search for influencers according to the following filters.

x-tagGroups:
  - name: Endpoints
    tags:
      - Account
      - Dictionaries
      - Reports
      - Identification

paths:
  /account/info/:
    x-summary: List Account Info
    get:
      tags:
        - "Account"
      summary: List Account Info
      parameters:
        - in: query
          name: api_token
          required: true
          type: string
          description: Your api_token is required for this request
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/AccountInfo"
          examples:
            application/json:
              user:
                name: Tensor Social
                email: hello@tensorsocial.com
                credits: 25

  /brands/:
    x-summary: List Brands & Interests
    get:
      tags:
        - "Dictionaries"
      summary: List Brands & Interests
      description: "List of all interests and brand that can be used as filter in Search or may be returned in Audience Data report."
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/brands_response"
          examples:
            application/json:
              status: true
              data:
                interests:
                  - id: 1
                    name: "Television & Film"
                brands:
                  - id: 2
                    name: "20th Century Fox"

  /locations/:
    x-summary: List Locations
    get:
      tags:
        - "Dictionaries"
      summary: List Locations
      description: List geo locations under certain filters.
      parameters:
        - in: query
          name: search
          type: string
          description: Search query
        - in: query
          name: limit
          type: integer
          description: "Limit search results (Default: `10`)"
        - in: query
          name: types
          type: string
          description: 'Limit search results to these types -> `"city"` `"state"` or `"country"`'
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/location_response"
          examples:
            application/json:
              - id: 122604
                type: ["city"]
                name: "Chicago"
                title: "Chicago, Illinois, United States"
                state:
                  id: 122586
                country:
                  id: 148838
              - id: 127190
                type: ["city"]
                name: "East Chicago"
                title: "East Chicago, Indiana, United States"
                state:
                  id: 161816
                country:
                  id: 148838

  /languages/:
    x-summary: List Languages
    get:
      tags:
        - "Dictionaries"
      summary: List Languages
      description: "List all supported languages ordered by descend of their frequency. They can be used as filter in Search or may be returned in Audience Data report. We recommend that you cache this dictionary because it updates rarely."
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/language_response"
          examples:
            application/json:
              status: true
              data:
                - code: "en"
                  name: "English"
                - code: "es"
                  name: "Spanish"

  /reports/new/:
    x-summary: Generate Report
    post:
      tags:
        - "Reports"
      summary: Generate New Report
      description: "Creates new audience data report. Both for likers and followers at the same time."
      parameters:
        - in: query
          name: api_token
          required: true
          type: string
          description: Your api_token is required for this request
        - in: query
          name: username
          required: true
          type: string
          description: "Instagram username, user id for link to user's profile page."
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/SampleReport"


  /reports/{report_id}/:
    x-summary: Fetch Report
    get:
      tags:
        - "Reports"
      summary: Fetch Report
      description: "Fetch previously generated report. We are storing old reports for 30 days."
      parameters:
        - in: path
          name: report_id
          required: true
          type: string
        - in: query
          name: api_token
          required: true
          type: string
          description: Your api_token is required for this request
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/SampleReport"
          examples:
            application/json:
              success: true
              version: "2"
              report_info:
                report_id: "string"
                created: "2019-04-15T02:50:53Z"
              user_profile:


  /identification/:
    x-summary: Search for influencers
    post:
      tags:
        - "Identification"
      summary: Search for influencers
      parameters:
        - in: query
          name: api_token
          required: true
          type: string
          description: Your api_token is required for this request
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Search"
      responses:
        200:
          description: "Search Successful"
          schema:
            $ref: "#/definitions/SearchResponse"
          examples:
            application/json:
              total: 25575764
              users:
                - user_id: "25025320"
                  name: "Instagram"
                  username: "instagram"
                  url: "https://www.instagram.com/instagram/"
                  picture: "http://img.tensorsocial.com/?https://scontent-frx5-1.cdninstagram.com/t51.2885-19/s320x320/14719833_310540259320655_1605122788543168512_a.jpg"
                  followers: 293555593
                  engagement_rate: 0.003065746391689427
                  match:
                    extra: {}
                - user_id: "173560420"
                  name: "Cristiano Ronaldo"
                  username: "cristiano"
                  url: "https://www.instagram.com/cristiano/"
                  picture: "http://img.tensorsocial.com/?https://scontent-frx5-1.cdninstagram.com/t51.2885-19/s320x320/55837776_379384389454688_4456240822588801024_n.jpg"
                  followers: 161980125
                  engagement_rate: 0.031196549576684177
                  match:
                    extra: {}
                - user_id: "7719696"
                  name: "Ariana Grande"
                  username: "arianagrande"
                  url: "https://www.instagram.com/arianagrande/"
                  picture: "http://img.tensorsocial.com/?https://scontent-atl3-1.cdninstagram.com/t51.2885-19/s320x320/54511215_1099923480217605_7428801122808102912_n.jpg"
                  followers: 151320982
                  engagement_rate: 0.012800029278160513
                  match:
                    extra: {}

# --------------------------- DEFINITIONS ---------------------------

definitions:
  AccountInfo:
    type: object
    properties:
      user:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          credits:
            type: number

  brands_response:
    title: Brands Response
    type: object
    properties:
      success:
        type: boolean
      data:
        type: object
        $ref: "#/definitions/BrandsData"

  BrandsData:
    title: Brands & Interests
    type: object
    properties:
      interests:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
      brands:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

  location_response:
    title: Locations Response
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
        description: 'Enum: `"city"` `"state"` `"country"`'
      name:
        type: string
        description: "Name of geo location"
      title:
        type: string
        description: "Name of geo location with country name, e.g. 'Paris, France'"
      state:
        type: object
        $ref: "#/definitions/locationObject"
      country:
        type: object
        $ref: "#/definitions/locationObject"

  locationObject:
    title: Location Object
    type: object
    properties:
      id:
        type: integer

  language_response:
    title: Languages Response
    type: object
    properties:
      success:
        type: boolean
      data:
        type: array
        $ref: "#/definitions/LanguageObject"

  LanguageObject:
    title: Language Data
    items:
      type: object
      properties:
        code:
          type: string
        name:
          type: string

  SampleReport:
    type: object
    properties:
      success:
        title: "Success"
        type: boolean
      version:
        title: "Version"
        type: string
      report_info:
        $ref: "#/definitions/ReportInfo"
      user_profile:
        $ref: "#/definitions/UserProfile"
      audience_likers:
        $ref: "#/definitions/AudienceLikers"
      audience_followers:
        $ref: "#/definitions/AudienceFollowers"

  ReportInfo:
    title: "Report info"
    type: object
    properties:
      report_id:
        title: "Report id"
        type: string
        minLength: 1
      created:
        title: "Created"
        type: string
        format: date-time

  ExamplePost:
    type: object
    properties:
      user_id: "string"
      username: "string"
      user_picture: "string"
      user_url: "string"
      type: "string"
      post_id: "string"
      created: "2019-04-22T14:12:49Z"
      text: "string"
      link: "string"
      mentions: ["string"]
      hashtags: ["string"]
      stat:
        likes: 0
        comments: 0
        views: 0
      sponsor:
        user_id: "string"
        username: "string"
      image: "string"
      video: "string"
      thumbnail: "string"


  UserProfile:
    title: "User profile"
    type: object
    properties:
      user_id:
        title: "User id"
        type: string
      username:
        title: "Username"
        type: string
      url:
        title: "Url"
        type: string
      picture:
        title: "Picture"
        type: string
      fullname:
        title: "Fullname"
        type: string
      is_verified:
        title: "Is verified"
        type: boolean
      is_business:
        title: "Is business"
        type: boolean
      gender:
        title: "Gender"
        type: string
        enum: ["MALE", "FEMALE"]
      age_group:
        title: "Age group"
        type: string
      language:
        title: "Language"
        type: string
      followers:
        title: "Followers"
        type: integer
      engagements:
        title: "Engagements"
        type: integer
      engagement_rate:
        title: "Engagement rate"
        type: number
      avg_likes:
        title: "Avg likes"
        type: integer
      avg_comments:
        title: "Avg comments"
        type: integer
      avg_views:
        title: "Avg views"
        type: integer
      stat_history:
        type: array
        items:
          $ref: "#/definitions/MonthlyStat"
      paid_post_perfomance:
        title: "Paid post perfomance"
        type: number
      geo:
        $ref: "#/definitions/GeoData"
      contacts:
        type: array
        items:
          $ref: "#/definitions/Contact"
      top_hashtags:
        type: array
        items:
          $ref: "#/definitions/Tag"
      top_mentions:
        type: array
        items:
          $ref: "#/definitions/Tag"
      brand_affinity:
        type: array
        items:
          $ref: "#/definitions/Brand"
      interests:
        type: array
        items:
          $ref: "#/definitions/Interest"
      relevant_tags:
        type: array
        items:
          $ref: "#/definitions/RelevantTag"
      similar_users:
        type: array
        items:
          $ref: "#/definitions/ScoredUser"
      top_posts:
        type: array
        items:
          $ref: "#/definitions/Post"
      commercial_posts:
        type: array
        items:
          $ref: "#/definitions/Post"
      recent_posts:
        type: array
        items:
          $ref: "#/definitions/PostWithoutImage"

  AudienceLikers:
    title: "Audience likers"
    type: object
    properties:
      success:
        title: "Success"
        description: "Set to false in case of there are no specific report"
        type: boolean
      error:
        title: "Error"
        description: "Code for reason of lack of report. Only if success=false"
        type: string
        enum: ["empty_audience"]
      error_message:
        title: "Error message"
        description: "Details for reason of lack of report. Only if success=false"
        type: string
      data:
        $ref: "#/definitions/AudienceDataLikers"

  AudienceDataLikers:
    title: "Data"
    type: object
    properties:
      notable_users_ratio:
        title: "Notable users ratio"
        type: number
      audience_credibility:
        title: "Audience credibility"
        type: number
      credibility_class:
        title: "Credibility class"
        type: string
        enum: ["bad", "low", "normal", "high", "best"]
      audience_genders:
        type: array
        items:
          $ref: "#/definitions/AudienceGender"
      audience_ages:
        type: array
        items:
          $ref: "#/definitions/AudienceAge"
      audience_genders_per_age:
        type: array
        items:
          $ref: "#/definitions/AudienceGenderPerAge"
      audience_ethnicities:
        type: array
        items:
          $ref: "#/definitions/AudienceEthnicity"
      audience_brand_affinity:
        type: array
        items:
          $ref: "#/definitions/AudienceBrand"
      audience_interests:
        type: array
        items:
          $ref: "#/definitions/AudienceInterest"
      audience_geo:
        $ref: "#/definitions/AudienceGeo"
      audience_lookalikes:
        type: array
        items:
          $ref: "#/definitions/ScoredUser"
      notable_users:
        type: array
        items:
          $ref: "#/definitions/User"
      likes_not_from_followers:
        title: "Likes not from followers"
        type: number

  AudienceFollowers:
    title: "Audience followers"
    type: object
    properties:
      success:
        title: "Success"
        description: "Set to false in case of there are no specific report"
        type: boolean
      error:
        title: "Error"
        description: "Code for reason of lack of report. Only if success=false"
        type: string
        enum": ["empty_audience"]
      error_message:
        title: "Error message"
        description: "Details for reason of lack of report. Only if success=false"
        type: string
      data:
        $ref: "#/definitions/AudienceData"

  AudienceData:
    title: "Data"
    type: object
    properties:
      notable_users_ratio:
        title: "Notable users ratio"
        type: number
      audience_credibility:
        title: "Audience credibility"
        type: number
      credibility_class:
        title: "Credibility class"
        description: "Only in Audience DAta report, there are no class in Post Analytics."
        type: string
        enum: ["bad", "low", "normal", "high", "best"]
      audience_genders:
        type: array
        items:
          $ref: "#/definitions/AudienceGender"
      audience_ages:
        type: array
        items:
          $ref: "#/definitions/AudienceAge"
      audience_genders_per_age:
        type: array
        items:
          $ref: "#/definitions/AudienceGenderPerAge"
      audience_ethnicities:
        type: array
        items:
          $ref: "#/definitions/AudienceEthnicity"
      audience_brand_affinity:
        type: array
        items:
          $ref: "#/definitions/AudienceBrand"
      audience_interests:
        type: array
        items:
          $ref: "#/definitions/AudienceInterest"
      audience_geo:
        $ref: "#/definitions/AudienceGeo"
      audience_lookalikes:
        type: array
        items:
          $ref: "#/definitions/ScoredUser"
      notable_users:
        type: array
        items:
          $ref: "#/definitions/User"

  MonthlyStat:
    type: object
    properties:
      month:
        title: "Month"
        type: string
      followers:
        title: "Followers"
        type: integer
      avg_likes:
        title: "Avg likes"
        type: integer

  GeoData:
    title: "Geo"
    type: object
    properties:
      city:
        $ref: "#/definitions/GeoCity"
      state:
        $ref: "#/definitions/GeoState"
      country:
        $ref: "#/definitions/GeoCountry"

  GeoCity:
    title: "City"
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      coords:
        $ref: "#/definitions/Coords"

  GeoState:
    title: "State"
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      coords:
        $ref: "#/definitions/Coords"

  GeoCountry:
    title: "Country"
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      coords:
        $ref: "#/definitions/Coords"
      code:
        title: "Code"
        type: string

  Coords:
    title: "Coords"
    type": object
    properties:
      lat:
        title: "Lat"
        type: number
      lon:
        title: "Lon"
        type: number

  Contact:
    type: object
    properties:
      type:
        title: "Type"
        type": string
        enum:
          [
            "youtube",
            "snapchat",
            "facebook",
            "whatsapp",
            "sayat",
            "sarahah",
            "vk",
            "twitter",
            "email",
            "phone",
            "viber",
            "telegram",
            "bbm",
            "lineid",
            "kik",
            "wechat",
            "skype",
            "tiktok",
          ]
      value:
        title: "Value"
        type: string

  Tag:
    type: object
    properties:
      tag:
        title: "Tag"
        type: string
      weight:
        title: "Weight"
        type: number

  Brand:
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      interest:
        type: array
        items:
          $ref: "#/definitions/Interest"

  Interest:
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string

  RelevantTag:
    type: object
    properties:
      tag:
        title: "Tag"
        type: string
      distance:
        title: "Distance"
        type: number
      freq:
        title: "Freq"
        type: number
      tag_cnt:
        title: "Tag cnt"
        type: integer

  ScoredUser:
    type: object
    properties:
      user_id:
        title: "User id"
        type: string
      username:
        title: "Username"
        type: string
      picture:
        title: "Picture"
        type: string
      followers:
        title: "Followers"
        type: integer
      fullname:
        title: "Fullname"
        type: string
      url:
        title: "Url"
        type: string
      geo:
        $ref: "#/definitions/GeoData"
      engagements:
        title: "Engagements"
        type: integer
      avg_likes:
        title: "Avg likes"
        type: integer
      avg_comments:
        title: "Avg comments"
        type: integer
      avg_views:
        title: "Avg views"
        type: integer
      score:
        title: "Score"
        type: number

  User:
    type: object
    properties:
      user_id:
        title": "User id"
        type: string
      username:
        title: "Username"
        type: string
      picture:
        title: "Picture"
        type: string
      followers:
        title: "Followers"
        type: integer
      fullname:
        title: "Fullname"
        type: string
      url:
        title: "Url"
        type: string
      geo:
        $ref: "#/definitions/GeoData"
      engagements:
        title: "Engagements"
        type: integer
      avg_likes:
        title: "Avg likes"
        type: integer
      avg_comments:
        title: "Avg comments"
        type: integer
      avg_views:
        title: "Avg views"
        type: integer

  Post:
    type: object
    properties:
      user_id:
        title: "User id"
        type: string
      username:
        title: "Username"
        type: string
      user_picture:
        title: "User picture"
        type: string
      user_url:
        title: "User url"
        type: string
      type:
        title: "Type"
        type: string
      post_id:
        title: "Post id"
        type: string
      created:
        title: "Created"
        type: string
        format: date-time
      text:
        title: "Text"
        type: string
      link:
        title: "Link"
        type: string
      mentions:
        type: array
        items:
          type: string
      hashtags:
        type: array
        items:
          type: string
      stat:
        $ref: "#/definitions/PostStat"
      sponsor:
        $ref: "#/definitions/Sponsor"
      image:
        title: "Image"
        type: string
      video:
        title: "Video"
        type: string
      thumbnail:
        title: "Thumbnail"
        type: string

  PostStat:
    title: "Stat"
    type: object
    properties:
      likes:
        title: "Likes"
        type: integer
      comments:
        title: "Comments"
        type: integer
      views:
        title: "Views"
        type: integer

  Sponsor:
    title: "Sponsor"
    type: object
    properties:
      user_id:
        title: "User id"
        type: string
      username:
        title: "Username"
        type: string

  PostWithoutImage:
    type: object
    properties:
      user_id:
        title: "User id"
        type: string
      username:
        title: "Username"
        type: string
      user_picture:
        title: "User picture"
        type: string
      user_url:
        title: "User url"
        type: string
      type:
        title: "Type"
        type: string
      post_id:
        title: "Post id"
        type: string
      created:
        title: "Created"
        type: string
        format: date-time
      text:
        title: "Text"
        type: string
      link:
        title: "Link"
        type: string
      mentions:
        type: array
        items:
          type: string
      hashtags:
        type: array
        items:
          type: string
      stat:
        $ref: "#/definitions/PostStat"
      sponsor:
        $ref: "#/definitions/Sponsor"

  Search:
    title: Search Influencers
    type: object
    properties:
      search:
        type: object
        $ref: "#/definitions/Filters"

  Filters:
    title: Filters
    type: object
    properties:
      audience_age:
        type: array
        $ref: "#/definitions/AudAge"
      audience_brand:
        type: array
        $ref: "#/definitions/AudBrand"
      audience_brand_category:
        type: array
        $ref: "#/definitions/AudBrand"
      audience_gender:
        type: object
        $ref: "#/definitions/AudGender"
      audience_geo:
        type: array
        $ref: "#/definitions/AudGeo"
      audience_lang:
        type: object
        $ref: "#/definitions/AudLang"
      audience_race:
        type: object
        $ref: "#/definitions/AudRace"
      brand:
        type: array
        items:
          type: integer
        description: "You can get a valid brand id from our dictionary"
      brand_category:
        type: array
        items:
          type: integer
        description: "You can get a valid interest (brand category) id from our dictionary"
      engagements:
        type: object
        $ref: "#/definitions/Engagements"
      followers:
        type: object
        $ref: "#/definitions/Followers"
      gender:
        type: object
        $ref: "#/definitions/Gender"
      age:
        type: object
        $ref: "#/definitions/Age"
      geo:
        type: array
        $ref: "#/definitions/Geo"
      lang:
        type: object
        $ref: "#/definitions/Lang"
      race:
        type: object
        $ref: "#/definitions/Race"
      text:
        type: string
        description: "Search phrase within influencer bio"
      engagement_rate:
        type: object
        $ref: "#/definitions/EngageRate"
      is_business:
        type: boolean
        description: "Only business account"
      has_ads:
        type: boolean
        description: "Has sponsored posts"
      has_email:
        type: boolean
        description: "Has contact details"
    example:
      audience_age:
        - code: "18-24"
          weight: 0.01
      audience_brand:
        - id: 0
          weight: 0.05
      audience_brand_category:
        - id: 0
          weight: 0.05
      audience_gender:
        code: "MALE"
        weight: 0.05
      audience_geo:
        - id: 0
          weight: 0.05
      audience_lang:
        code: "en"
        weight: 0.2
      audience_race:
        code: "Black"
        weight: 0.3
      brand:
        - 0
      brand_category:
        - 0
      engagements:
        left_number: 1000
        right_number: 200000
      followers:
        left_number: 500000
        right_number: 1000000
      gender:
        code: "MALE"
      age:
        left_number: "18"
        right_number: "35"
      geo:
        - id: 0
      lang:
        code: "es"
      race:
        code: "White"
      text: "twitch"
      engagement_rate:
        value: 0
        operator: "gte"
      is_business: true
      has_ads: true
      has_email: true

  AudAge:
    title: Audience Age
    items:
      type: object
      properties:
        code:
          type: string
          enum: ["13-17", "18-24", "25-34", "35-44", "45-64", "65-"]
        weight:
          type: number
          description: "Default `0.01`"
      required:
        - code

  AudienceAge:
    type: object
    properties:
      code:
        title: "Code"
        type: string
        enum: ["13-17", "18-24", "25-34", "35-44", "45-64", "65-"]
      weight:
        title: "Weight"
        type: number

  AudienceGenderPerAge:
    type: object
    properties:
      code:
        title: "Code"
        type: string
        enum: ["13-17", "18-24", "25-34", "35-44", "45-64", "65-"]
      male:
        title: "Male"
        type: number
      female:
        title: "Female"
        type: number

  AudBrand:
    title: Audience Brand
    items:
      type: object
      properties:
        id:
          type: integer
        weight:
          type: number
          description: "Default `0.05`"
      required:
        - id

  AudienceBrand:
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      interest:
        type: array
        items:
          $ref: "#/definitions/Interest"
      weight:
        title: "Weight"
        type: number

  AudienceInterest:
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      weight:
        title: "Weight"
        type": number

  AudGender:
    title: Audience Gender
    type: object
    properties:
      code:
        type: integer
        enum: ["MALE", "FEMALE"]
      weight:
        type: number
        description: "Default `0.05`"
    required:
      - code

  AudienceGender:
    type: object
    properties:
      code:
        title: "Code"
        type: string
        enum: ["MALE", "FEMALE"]
      weight:
        title: "Weight"
        type: number

  AudGeo:
    title: Audience Geo
    items:
      type: object
      properties:
        id:
          type: integer
          description: "You can get a valid id from location dictionary"
        weight:
          type: number
          description: "Default `0.05`"
      required:
        - id

  AudienceGeo:
    title: "Audience geo"
    type: object
    properties:
      countries:
        type: array
        items:
          $ref: "#/definitions/AudienceGeoCountry"
      states:
        type: array
        items:
          $ref: "#/definitions/AudienceGeoState"
      cities:
        type: array
        items:
          $ref: "#/definitions/AudienceGeoCity"

  AudienceGeoCountry:
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      code:
        title: "Code"
        type: string
      weight:
        title: "Weight"
        type: number

  EmbedGeoCountry:
    title: "Country"
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      code:
        title: "Code"
        type: string

  AudienceGeoState:
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      weight:
        title: "Weight"
        type: number
      country:
        $ref: "#/definitions/EmbedGeoCountry"

  AudienceGeoCity:
    type: object
    properties:
      id:
        title: "Id"
        type: integer
      name:
        title: "Name"
        type: string
      coords:
        $ref: "#/definitions/Coords"
      weight:
        title: "Weight"
        type: number
      country:
        $ref: "#/definitions/EmbedGeoCountry"

  AudLang:
    title: Audience Lang
    type: object
    properties:
      code:
        type: string
        description: "You can get a valid language code from our dictionary"
      weight:
        type: number
        description: "Default `0.2`"
    required:
      - code

  AudRace:
    title: Audience Race
    type: object
    properties:
      code:
        type: string
        description: 'Enum: `"Black"` `"Asian"` `"White"` `"Hispanic"`'
      weight:
        type: number
        description: "Default `0.3`"
    required:
      - code

  AudienceEthnicity:
    type: object
    properties:
      code:
        title: "Code"
        type: string
        enum: ["white", "asian", "african_american", "hispanic"]
      name:
        title: "Name"
        type: string
        enum: ["White / Caucasian", "Asian", "African American", "Hispanic"]
      weight:
        title: "Weight"
        type: number

  Engagements:
    title: Engagements
    type: object
    properties:
      left_number:
        type: integer
      right_number:
        type: integer

  Followers:
    title: Followers
    type: object
    properties:
      left_number:
        type: integer
      right_number:
        type: integer

  Gender:
    title: Gender
    type: object
    properties:
      code:
        type: string
        description: 'Enum: `"MALE"` `"FEMALE"` `"KNOWN"` `"UNKNOWN"`'

  Age:
    title: Age
    type: object
    properties:
      left_number:
        type: string
        description: 'Enum: `"18"` `"25"` `"35"` `"45"` `"65"`'
      right_number:
        type: string
        description: 'Enum: `"18"` `"25"` `"35"` `"45"` `"65"`'

  Geo:
    title: Geo
    items:
      type: object
      properties:
        id:
          type: integer
          description: "You can get a valid id from location dictionary"

  Lang:
    title: Lang
    type: object
    properties:
      code:
        type: string
        description: "You can get a valid language code from our dictionary"

  Race:
    title: Race
    type: object
    properties:
      code:
        type: string
        description: 'Enum: `"Black"` `"Asian"` `"White"` `"Hispanic"`'

  EngageRate:
    title: Engagement Rate
    type: object
    properties:
      value:
        type: number
      operator:
        type: string
        description: 'Enum: `"lt"` `"lte"` `"gt"` `"gte"`   (Default: `"gte"`)'
    required:
      - value

  SearchResponse:
    title: Search Response
    type: object
    properties:
      total:
        type: integer
      users:
        type: array
        items:
          type: object
          properties:
            user_id:
              type: string
            name:
              type: string
            username:
              type: string
            url:
              type: string
            picture:
              type: string
            followers:
              type: integer
            engagement_rate:
              type: number
            match:
              type: object
              properties:
                extra:
                  type: object
